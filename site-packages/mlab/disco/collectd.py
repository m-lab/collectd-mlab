"""Support for formatting collectd configuration files."""


class Error(Exception):
    """Base error class for collectd module."""
    pass


class DuplicateName(Error):
    """A name is required to be unique but was used more than once."""
    pass


class SnmpConfig(object):
    """Configuration for the collectd-snmp plugin."""

    def __init__(self, hostname, community, interval):
        """Initializes an SnmpConfig object.

        Args:
          hostname: str, the hostname of the switch SNMP server.
          community: str, the SNMP community string to query.
          interval: int, the time interval to query in seconds.
        """
        self._hostname = hostname
        self._community = community
        self._interval = interval
        self._data_blocks = []
        self._collections = set()

    def add_data(self, port_name, oid_group_name, oids):
        """Adds a collectd-snmp data block to the configuration.

        All data blocks should have a unique combination of (port_name,
        oid_group_name).

        Args:
          port_name: str, symbolic name of port, e.g. "local", "uplink".
          oid_group_name: str, name of an OID group, e.g. "discards", "octets".
              Corresponding collectd types must exist for
              "ifx_<oid_group_name>".
          oids: iterable of str, the actual numeric or symbolic OIDs to collect.

        Raises:
          DuplicateName: a data block with the same (port_name, oid_group_name)
              pair was already added.
        """
        collection_id, data_block = self._format_data_block(
            port_name, oid_group_name, oids)
        if collection_id in self._collections:
            raise DuplicateName('Collection name already added: %s' %
                                collection_id)
        self._collections.add(collection_id)
        self._data_blocks.append(data_block)

    def generate(self):
        """Returns a collectd-snmp plugin configuration.

        The plugin configuration only needs to be generated once, but may be
        called multiple times.

        Returns:
          str, a collectd-snmp plugin configuration.
        """
        return self._format_snmp_plugin(self._format_host_block())

    def _format_host_block(self):
        """Creates a collectd-snmp configuration host block.

        Returns:
          str, a collectd-snmp <Host></Host> block.
        """
        quoted_collections = ['"%s"' % v for v in self._collections]
        # Host name is used to name the output files.
        data = '  <Host "%s">\n' % self._hostname
        # Address is used to contact the switch SNMP server.
        data += '    Address "%s"\n' % self._hostname
        data += '    Version 2\n'
        data += '    Community "%s"\n' % self._community
        data += '    Collect %s\n' % ' '.join(quoted_collections)
        data += '    Interval %s\n' % self._interval
        data += '  </Host>'
        return data

    def _format_data_block(self, port_name, oid_group_name, oids):
        """Formats a collectd-snmp configuration data block.

        All data blocks should have a unique combination of (port_name,
        oid_group_name).

        Args:
          port_name: str, name of switch port, e.g. 'uplink'.
          oid_group_name: str, name of the oid to format, e.g. 'discards'.
          oids: iterable of str, the actual numeric or symbolic OIDs to collect.

        Returns:
          tuple of (str, str), the first element is a unique collection name,
              and the second is a collectd-snmp <Data></Data> block.
        """
        unique_name = _get_unique_name(port_name, oid_group_name)

        data = '  <Data "%s">\n' % unique_name
        data += '    Type "%s"\n' % _get_collectd_type(oid_group_name)
        data += '    Table false\n'
        data += '    Instance "%s"\n' % port_name
        data += '    Values ' + ' '.join(['"%s"' % v for v in oids]) + '\n'
        data += '  </Data>'
        return unique_name, data

    def _format_snmp_plugin(self, host_block):
        """Formats a collectd-snmp plugin configuration.

        Args:
          host_block: str, a host block as created by format_snmp_host.

        Returns:
          str, the collectd-snmp configuration.
        """
        data = 'LoadPlugin snmp\n'
        data += '<Plugin snmp>\n'
        data += '\n'.join(self._data_blocks) + '\n'
        data += '\n' + host_block + '\n'
        data += '</Plugin>'
        return data


def _get_unique_name(port_name, oid_group_name):
    """Returns a unique name based on the port and oid group name."""
    return port_name + '_' + oid_group_name


def _get_collectd_type(oid_group_name):
    """Returns the collectd type name based on oid_group_name."""
    # This names a collectd type defined in types.db.
    return 'ifx_' + oid_group_name
