"""Tests for collectd."""

import unittest

# Module under test.
import collectd

_PLUGIN_CONFIG = """LoadPlugin snmp
<Plugin snmp>
  <Data "uplink_discards">
    Type "ifx_discards"
    Table false
    Instance "uplink"
    Values "fake-receive-oid" "fake-transmit-oid"
  </Data>

  <Host "s1.nuq0t.measurement-lab.org">
    Address "s1.nuq0t.measurement-lab.org"
    Version 2
    Community "COMMUNITY"
    Collect "uplink_discards"
    Interval 10
  </Host>
</Plugin>"""


class SnmpConfigTest(unittest.TestCase):
    """Tests for the collectd.SnmpConfig class."""

    def test_config_generate(self):
        config = collectd.SnmpConfig('s1.nuq0t.measurement-lab.org',
                                     'COMMUNITY', 10)

        config.add_data('uplink', 'discards',
                        ('fake-receive-oid', 'fake-transmit-oid'))
        actual = config.generate()

        self.assertEqual(_PLUGIN_CONFIG, actual)

    def test_config_add_data_raises_DuplicateName_when_data_added_twice(self):
        config = collectd.SnmpConfig('s1.nuq0t.measurement-lab.org',
                                     'COMMUNITY', 10)
        config.add_data('uplink', 'discards',
                        ('fake-receive-oid', 'fake-transmit-oid'))

        with self.assertRaises(collectd.DuplicateName):
            config.add_data('uplink', 'discards',
                            ('fake-different-oid', 'fake-different-oid'))


if __name__ == '__main__':
    unittest.main()
