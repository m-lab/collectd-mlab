"""Tests for route module."""

import unittest

# Module under test.
import route

FAKE_ROUTE_TABLE_GOOD = """
Iface   Destination     Gateway         Flags   RefCnt  Use
eth0    01020304        00000000        0001    0       0       0
eth0    0000FEA9        00000000        0001    0       0       1002
eth0    00000000        02030A05        0003    0       0       0
""".strip()

# This route table is missing a default route, i.e. there is no Destination
# address of "00000000".
FAKE_ROUTE_TABLE_NO_DEFAULT_ROUTE = """
Iface   Destination     Gateway         Flags   RefCnt  Use
eth0    01020304        00000000        0001    0       0       0
eth0    0000FEA9        00000000        0001    0       0       1002
""".strip()


class RouteTest(unittest.TestCase):

    def test_gateways(self):
        route_lines = FAKE_ROUTE_TABLE_GOOD.splitlines()
        expected = {'default': {route.AF_INET: ('5.10.3.2', 'eth0')}}

        actual = route.gateways(route_lines)

        self.assertDictEqual(expected, actual)

    def test_gateways_returns_empty_result_when_gateway_is_missing(self):
        route_lines = FAKE_ROUTE_TABLE_NO_DEFAULT_ROUTE.splitlines()

        self.assertDictEqual({}, route.gateways(route_lines))


if __name__ == '__main__':
    unittest.main()
